.myli {
  /*Selecciona la clase */
  background-color: aquamarine;
  color: rgb(255, 255, 255);
}
header {
  /*Seleccion de elemento*/
  color: rgb(255, 255, 255);
  background-color: lightpink;
}
.content-content-box > div {
  background: lightpink;
  width: 300px;
  margin: 30px;
  border: 10px solid black;
  text-align: center;
}

#article-1 {
  /*Seleccion de ID*/
  background-color: lightpink;
  text-align: center;
}
#article-2 {
  /*Seleccion de ID*/
  background-color: lightpink;
  text-align: center;
}

#myp {
  color: cadetblue;
  text-align: center;
}
.myp {
  font-size: 24px;
  text-align: center;
}
.back {
  background-color: lightpink;
  text-align: center;
}

.color-rojo-back-azul {
  color: chocolate;
  background-color: lightpink;
  text-align: center;
}
/*  MODELO DE CAJA */

.contenedor {
  margin: 50px;
  background-color: rgb(240, 157, 225);
  padding: 10px;
  border: 15px solid purple;
  color: purple;
  text-align: center;
  align-items: center;
}
.contenido {
  background-color: burlywood;
  text-align: center;
}
.contenedor-con-imagen {
  width: 350px;
  height: 350px;
  padding: 20px;
  background-color: lightpink;
  background-image: url("/IMG/header2.jpg");
  background-size: cover;
  background-position: center;
  text-align: center;
  padding: 20px;
  border: 15px solid purple;
}
.contenido-con-imagen {
  background-color: rgb(255, 255, 255);
  text-align: center;
}
/* Selectores */
/*Seleccionar por elemento */

span {
  font-weight: bold;
  text-align: center;
}
/* Asigna los mismos estilos a elemtnos con nombres diferentes, esta regla afecta a todos los elementos <p> y <span> */
p,
span {
  color: brown;
  text-align: center;
}

main p {
  background-color: lightpink;
  text-align: center;
}
/* Usa el caracter ">" para referenciar un elemento que es un hijo directo como .contenedor .parrafo */

.contenedor-parrafo > p {
  font-size: 35px;
  text-align: center;
}
/* Este selector hace referencia a elementos que están precediodos por otros elementos ambos deben estar al mismo nivel*/
h1 + p {
  color: mediumslateblue;
  text-align: center;
}

/* Estilos más usados */
/* Declara el tipo de letra que más se usa para mostrar en un texto. Se pueden declarar múltiples valores separados por coma para ofrecer al navegador diferentes alternativas para mayor disponibilidad  */
.container {
  border-top: 1px solid red;
  padding: 20px;
  font-family: Georgia, "Times New Roman", Times, serif;
  text-align: center;
}
.container > .content > p {
  background-color: lightpink;
  color: black;
  font-size: 25px; /*Determina el tamaño de la fuente; puede estar incluida en px, pt, %, rem, em */
  font-weight: 100; /*bold (from 100 to 1000)*/
  text-align: center;
  font-style: oblique; /* normal, italic, etc */
}
.content > h3 {
  font: bold 30px Arial, sans-serif; /* Permite declarar varios atributos al mismo tiempo, separados por espacios. 1° grosor, 2° tamaño y 3° familia de fuente */
  text-align: center; /* left, right, center, justify */
  line-height: 60px; /* Define el espacio entre líneas */
}
.content {
  font-size: 20px;
  color: antiquewhite;
}

/* Colores */

.mydiv {
  height: 100px;
  width: 100px;
  border: 1px solid black;
  padding: 20px;
  background-color: rgb(240, 19, 19);
  background-image: url("IMG/IMG1.jpg");
}

.div-in-mydiv {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: rgb(241, 228, 228);
}
.div-in-mydiv-2 {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: #007fff; /* 0 - 9 y A - F */
}

/* tamaños */
.div-in-mydiv-3 {
  height: 50px;
  width: 50px;
  /*margin-top: 20px; */
  /* para que el margen sea desde arriba */
  margin: 20px 0;
  border: 1px solid black;
  background-color: #a3d397;
}

.tamano {
  margin: 100px 20px;
  height: 200px;
  width: 200px;
  background-color: black;
}

.tamano-hijo {
  height: 25%;
  width: 25%;
  /* estos porcentajes son en relación al elemento que lo contiene */
  background-color: rgb(206, 21, 21);
}

.div-vh-vw {
  height: 100vh;
  width: calc(100vh - 40px);
  background-color: blue;
  font: bold;
  display: flex;
}
.punto {
  height: 100pt;
  width: 100pt;
  background-color: red;
  font: bold;
}
.div-rem {
  height: 20rem;
  width: 20rem;
  background-color: green;
}
.div-em {
  height: 20em; /*Relacion a la fuente del contenedor*/
  width: 20em;
  background-color: rgb(0, 255, 157);
}
._contenedor {
  background-color: red;
  width: 500px;
  height: 500px;
}
._contenido {
  background-color: #007fff;
  width: 200px;
  height: 200px;
  max-height: 200px; /*Maximo de alto*/
  max-width: 200px; /*Maximo de ancho*/
  /*overflow: scroll; overflow: auto;*/
  overflow: hidden;
  /*overflow-y: auto; overflow-x: hidden;*/
}
._otrocontenido {
  background-color: #e5ff00;
  width: 150px;
  height: 150px;
  color: black;
}
.contenido_grande {
  height: 400px;
  width: 150px;
  background-color: chocolate;
}
.contenedor-de-bordes > div {
  width: 100px;
  height: 100px;
  border-width: 5px;
  border-style: dotted;
  border-color: black;
  border-radius: 50%;
  background-color: aqua;
  margin-top: 20px;
}

.borde-1 {
  border-style: dashed !important;
}
.borde-2 {
  border-style: double !important;
}
.borde-3 {
  border-style: outset !important;
}
.borde-4 {
  border-style: solid !important;
}
.borde-en-una-linea {
  border: solid 1px rebeccapurple; /* 1° tamaño de línea (border-with), 2° Estilo de borde, 3° color*/
  border-radius: 50%;
  height: 100px;
  width: 100px;
  margin-top: 20px;
}
.flex-container {
  display: flex;
  font-size: 20px;
  border: 2px solid black;
  flex-wrap: wrap; /* Acomoda los contenidos para que sean responsivos el no-wrap lo fuerza al ancho de la ventana*/

  /**flex-flow: row wrap; Combinacion de propiedades flex direction y flex wrap*/
  padding: 10px;
  justify-content: center; /*<--- Alinea el contenido en la pagina distribuyendo los flex ya sea al centro, al lado izquiero o derecho, arriba o abajo */
  flex-direction: row; /* Acomoda las columnas flex-direction: colum-reverse; las cambia de lugar define en que direccion se distribuiran*/
  /*Align-items: center; se usa para alinear en vertical los elementos dentro del contenedor*/
}

.flex-container > div {
  margin: 10px;
  background-color: #007fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
}

footer p {
  color: aliceblue;
  text-align: center;
}

/* 
 1 - flex-direction : define en que dirección se distribuiran los elementos dentro del contenedor
 - column
 - column-reverse
 - row
 - row-reverse

 2- flex-wrap: define si que los elementos dentro del contenedor puedan saltar a la siguiente fila o columna
 - wrap
 - nowrap

 3- fex-flow : Es una combinacion de las propiedades flex-directio y flex-wrap

 4- justify-conetnt : para alinear el contenido
 - star
 - center
 - end
 - flex-start
 - flex-center
 - flex-end

 5- align-items : se usa para alinear en vertical los elementos dentro del contenedor
 - center
 - start
 - end
 - stretch
 - baseline

 6- Align-content para alinear las filas::after

 -spacebetween
 -space-arround
 -strech
 -center
 -flex-start
 -flex-end

  */

.contenedor-perfecto {
  display: flex;
  background-color: #ddd;
  height: 30vh;
  width: 30vw;
  justify-content: center;
  align-items: center;
}

.contenido-perfecto {
  display: flex;
  background-color: green;
  height: 100px;
  width: 100px;
  text-align: center;
  justify-content: center;
  align-items: center;
}
/*Selector hijo */
/*
Comportamiento de elementos hijos dentro de contenedores flex
1- order: especifica el orden de los elementos
2-flex-grow: Determina cuanto crece el elemento relativo al resto de elementos que estan dentro del contenedor flex

*/
.flex-container-2 {
  display: flex;
  font-size: 20px;
  border: 2px solid black;
  flex-wrap: wrap; /* Acomoda los contenidos para que sean responsivos el no-wrap lo fuerza al ancho de la ventana*/

  /**flex-flow: row wrap; Combinacion de propiedades flex direction y flex wrap*/
  padding: 10px;
  justify-content: center; /*<--- Alinea el contenido en la pagina distribuyendo los flex ya sea al centro, al lado izquiero o derecho, arriba o abajo */
  flex-direction: row; /* Acomoda las columnas flex-direction: colum-reverse; las cambia de lugar define en que direccion se distribuiran*/
  /*Align-items: center; se usa para alinear en vertical los elementos dentro del contenedor*/
}

.flex-container-2 > div {
  margin: 10px;
  background-color: #007fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
}

.flex-container-2 > div:nth-child(1) {
  order: 3;
  flex-grow: 1;
  background-color: blueviolet;
}
.flex-container-2 > div:nth-child(2) {
  order: 2;
  flex-grow: 4;
  background-color: rgb(80, 226, 43);
}
.flex-container-2 > div:nth-child(3) {
  order: 1;
  flex-grow: 5;
  background-color: rgb(43, 46, 226);
}
/* Flex - shrink */

/* 
Determina cuanto se puede encoger un elemento en relación a los demas dentro de un contenedor flex */

.flex-container-3 {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;
}
.flex-container-3 > div {
  margin: 10px;
  background-color: #9233a9;
  color: #fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
}

.flex-container-3 > div:nth-child(2) {
  flex-shrink: 0;
}

/* 
flex-basis: 
Determina una longitud especifica
 */

.flex-container-3 > div:nth-child(3) {
  flex-basis: 200px;
}

/*
Dsiplay grid nos permitira disponer elementos en 2 dimensiones a diferencia de flex que nos ayuda a disponer elementos solo en una dimension 
*/
.container-grid {
  display: grid;
}

.item {
  background-color: cornflowerblue;
  color: white;
  padding: 20px;
  font-size: 20px;
  border: solid 2px #87e2e2;
}
.grid-columns {
  grid-template-columns: repeat(3, 1fr);
  /* repeat(cantidad de filas, unidad de medida en fr)*/

  /* grid-template-columns: 2fr 400px 1fr;*/
}
.grid-rows {
  grid-template-rows: 1fr 50% 1fr;
}
.title3 {
  margin-top: 50px;
}
.grid-rows-columns {
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: repeat(3, 1fr);
}
.primero {
  grid-column-start: 1; /* Desde donde comienza*/
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 3;
}

.estructura {
  height: 100vh;
  width: 100vw;
  color: #fff;
  -webkit-text-stroke: 0.8px rgba(0, 0, 0, 0.842);
  font-size: 2rem;
  grid-template-areas:
    "_header _header"
    "_sidelbar _main"
    "_footer _footer";

  grid-template-rows: 80px 1fr 80px;
  grid-template-columns: 300px 1fr;
}
._header {
  grid-area: _header;
  background-color: chartreuse;
}
._sidelbar {
  grid-area: _sidelbar;
  background-color: rgb(174, 0, 255);
}
._main {
  grid-area: _main;
  background-color: rgb(53, 54, 54);
}
._footer {
  grid-area: _footer;
  background-color: rgb(0, 255, 234);
}

.responsivo {
  display: grid;
  grid-template-columns: repeat(3, minmax(100px, 200px));
  grid-template-rows: repeat(1, minmax(100px, 200px));
  border: 2px solid #007fff;
  gap: 15px;
  padding: 15px;
  justify-content: center;
}
.responsivo > div {
  background-color: #007fff;
  color: #ddd;
  padding: 30px;
}
